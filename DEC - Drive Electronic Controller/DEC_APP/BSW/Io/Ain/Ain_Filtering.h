/**********************************************************************************************************************
 * \file ADC_Filtering.h
 * \copyright Copyright (C) Infineon Technologies AG 2019
 *
 * Use of this file is subject to the terms of use agreed between (i) you or the company in which ordinary course of
 * business you are acting and (ii) Infineon Technologies AG or its licensees. If and as long as no such terms of use
 * are agreed, use of this file is subject to following:
 *
 * Boost Software License - Version 1.0 - August 17th, 2003
 *
 * Permission is hereby granted, free of charge, to any person or organization obtaining a copy of the software and
 * accompanying documentation covered by this license (the "Software") to use, reproduce, display, distribute, execute,
 * and transmit the Software, and to prepare derivative works of the Software, and to permit third-parties to whom the
 * Software is furnished to do so, all subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including the above license grant, this restriction
 * and the following disclaimer, must be included in all copies of the Software, in whole or in part, and all
 * derivative works of the Software, unless such copies or derivative works are solely in the form of
 * machine-executable object code generated by a source language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
 * COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN
 * CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 * IN THE SOFTWARE.
 *********************************************************************************************************************/
#ifndef ADC_FILTERING_H_
#define ADC_FILTERING_H_
/*********************************************************************************************************************/
/*-----------------------------------------------------Includes------------------------------------------------------*/
/*********************************************************************************************************************/
#include "Ifx_Types.h"
#include "IfxEvadc_Adc.h"
/*********************************************************************************************************************/
/*------------------------------------------------------Macros-------------------------------------------------------*/
/*********************************************************************************************************************/
#define AN0                 0
/* The results stored in the registers with data modification enabled must be divided by a factor, which depends on the
 * Data Modification Mode and its coefficients. */
#define DIV_FACTOR_AVRG     4   /* Divider factor for AN39: 4 accumulated conversions lead to a gain of 4           */
#define DIV_FACTOR_FIR      3   /* Gain of the FIR filter (The DC gain is equal to the sum of its coefficients)     */
#define DIV_FACTOR_IIR      4   /* Gain of the IIR filter (The selectable IIR coefficients lead to a gain of 4)     */
#define EVADC_MAX           4095            /* Maximum value (conversion results are expressed in 12-bit format)    */
#define EVADC_MIN           0               /* Minimum value of a conversion result                                 */
#define VAREF_VOLTAGE       3.3             /* Maximum voltage value measurable by the EVADC                        */
#define VOLT_CONVERSION     VAREF_VOLTAGE / EVADC_MAX   /* Conversion factor from ADC value to voltage (V)          */
/*********************************************************************************************************************/
/*-------------------------------------------------Global variables--------------------------------------------------*/
/*********************************************************************************************************************/
/*********************************************************************************************************************/
/*-------------------------------------------------Data Structures---------------------------------------------------*/
/*********************************************************************************************************************/
/* Structure to store the selected channel and its assigned result register */
typedef struct
{
    IfxEvadc_Vadcg_In *analogInput;
    IfxEvadc_ChannelResult resultRegister;
}channel;
/* Structure to store the processed values of the conversions */
typedef struct
{
    uint16 currentValue;
    uint16 max;
    uint16 min;
}measureStats;
extern IfxEvadc_Adc g_evadc;                                     /* Global variable for configuring the EVADC module       */
/*********************************************************************************************************************/
/*------------------------------------------------Function Prototypes------------------------------------------------*/
/*********************************************************************************************************************/
/* Functions used to interface the EVADC */
extern void Ain_FilteringInit(void);                                         /* Function to initialize the EVADC module                  */
#endif /* ADC_FILTERING_H_ */
