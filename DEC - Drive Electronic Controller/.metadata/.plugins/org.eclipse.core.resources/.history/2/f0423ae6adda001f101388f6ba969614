/**********************************************************************************************************************
 * \file Captures.c
 * \copyright Copyright (C) Infineon Technologies AG 2019
 * 
 * Use of this file is subject to the terms of use agreed between (i) you or the company in which ordinary course of 
 * business you are acting and (ii) Infineon Technologies AG or its licensees. If and as long as no such terms of use
 * are agreed, use of this file is subject to following:
 * 
 * Boost Software License - Version 1.0 - August 17th, 2003
 * 
 * Permission is hereby granted, free of charge, to any person or organization obtaining a copy of the software and 
 * accompanying documentation covered by this license (the "Software") to use, reproduce, display, distribute, execute,
 * and transmit the Software, and to prepare derivative works of the Software, and to permit third-parties to whom the
 * Software is furnished to do so, all subject to the following:
 * 
 * The copyright notices in the Software and this entire statement, including the above license grant, this restriction
 * and the following disclaimer, must be included in all copies of the Software, in whole or in part, and all 
 * derivative works of the Software, unless such copies or derivative works are solely in the form of 
 * machine-executable object code generated by a source language processor.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE 
 * COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN 
 * CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS 
 * IN THE SOFTWARE.
 *********************************************************************************************************************/


/*********************************************************************************************************************/
/*-----------------------------------------------------Includes------------------------------------------------------*/
/*********************************************************************************************************************/



/*********************************************************************************************************************/
/*------------------------------------------------------Macros-------------------------------------------------------*/
/*********************************************************************************************************************/

/*********************************************************************************************************************/
/*-------------------------------------------------Global variables--------------------------------------------------*/
/*********************************************************************************************************************/

#if defined(__TASKING__)
#pragma noclear
/* These variables should be placed in a NOINIT section so they are
** not initialized after a reset.  The application could then store the
** data in NVM or make it available via diagnostics.
*/



#pragma clear
#elif defined(__GNUC__)

volatile Ifx_CSA CSA_capture[IFXCPU_NUM_MODULES][CSA_CAPTURE_LIMIT] __attribute__ ((section (".noinit")));
volatile uint32 STACK_capture[IFXCPU_NUM_MODULES][STACK_CAPTURE_LIMIT][STACK_CAPTURE_SIZE] __attribute__ ((section (".noinit")));

volatile Ifx_CPU_PIETR PIETR_capture[IFXCPU_NUM_MODULES] __attribute__ ((section (".noinit")));
volatile Ifx_CPU_PIEAR PIEAR_capture[IFXCPU_NUM_MODULES] __attribute__ ((section (".noinit")));

volatile Ifx_CPU_DIETR DIETR_capture[IFXCPU_NUM_MODULES] __attribute__ ((section (".noinit")));
volatile Ifx_CPU_DIEAR DIEAR_capture[IFXCPU_NUM_MODULES] __attribute__ ((section (".noinit")));

volatile Ifx_CPU_DATR DATR_capture[IFXCPU_NUM_MODULES] __attribute__ ((section (".noinit")));
volatile Ifx_CPU_DEADD DEADD_capture[IFXCPU_NUM_MODULES] __attribute__ ((section (".noinit")));

volatile Ifx_SMU_AG AG_capture[IFXCPU_NUM_MODULES][12] __attribute__ ((section (".noinit")));

#endif

/*********************************************************************************************************************/
/*---------------------------------------------Function Implementations----------------------------------------------*/
/*********************************************************************************************************************/

