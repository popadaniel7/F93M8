#include "Nvm.h"
#include "Ifx_Types.h"
#include "IfxCpu.h"
#include "IfxScuWdt.h"
#include "Os.h"
#include "Ain_Filtering.h"
#include "Can.h"
#include "Dem.h"
#include "Dcm.h"
#include "McuSm.h"
#include "EncCal.h"
#include "SysMgr.h"
#include "Wdg.h"
#include "Smu.h"
#include "Crc.h"
#include "task_core0.h"
#include "SafetyKit_SSW.h"
#include "SafetyKit_Main.h"
#include "aurix_pin_mappings.h"

uint8 OsInit_C0 = 0u;

extern void Ssw_StartCores(void);

void core0_main(void)
{
//  while(1)
//  {
//    __debug();
//    IfxCpu_disableInterrupts();
//    SysMgr_WakeupInitScr();
//    SysMgr_PreSleepInitScr();
//    SysMgr_LoadScr();
//    for(uint32 i = 0; i < 30000; i++)
//    {
//      __asm("nop");
//    }
//    SysMgr_GoSleepSequence();
//  }
    runSafeAppSwStartup();
    /* Start core 1 and core 2. */
    Ssw_StartCores();
    SysMgr_EcuState = SYSMGR_STARTUP;
    IfxCpu_enableInterrupts();
    McuSm_InitializeBusMpu();
    Ain_FilteringInit();
    Crc_Init();
    gpio_init_pins();
    can0_node0_init_pins();
    Can_Init();
    Nvm_ReadAll();
    Dem_Init();
    Dcm_Init();
    EncCal_MainFunction();
    SysMgr_WakeupInitScr();
    SysMgr_ProcessResetDtc();
    Os_Init_C0();
    OsInit_C0 = 1u;
    initCpuWatchdog(0);
    initSafetyWatchdog();
    serviceCpuWatchdog();
    serviceSafetyWatchdog();
    initSafetyKit();
    vTaskStartScheduler_core0();
}
