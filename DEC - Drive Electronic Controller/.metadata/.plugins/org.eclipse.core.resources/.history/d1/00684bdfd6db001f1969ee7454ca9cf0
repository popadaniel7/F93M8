/**********************************************************************************************************************
 * \file DMA_ADC_Transfer.h
 * \copyright Copyright (C) Infineon Technologies AG 2019
 *
 * Use of this file is subject to the terms of use agreed between (i) you or the company in which ordinary course of
 * business you are acting and (ii) Infineon Technologies AG or its licensees. If and as long as no such terms of use
 * are agreed, use of this file is subject to following:
 *
 * Boost Software License - Version 1.0 - August 17th, 2003
 *
 * Permission is hereby granted, free of charge, to any person or organization obtaining a copy of the software and
 * accompanying documentation covered by this license (the "Software") to use, reproduce, display, distribute, execute,
 * and transmit the Software, and to prepare derivative works of the Software, and to permit third-parties to whom the
 * Software is furnished to do so, all subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including the above license grant, this restriction
 * and the following disclaimer, must be included in all copies of the Software, in whole or in part, and all
 * derivative works of the Software, unless such copies or derivative works are solely in the form of
 * machine-executable object code generated by a source language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
 * COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN
 * CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 * IN THE SOFTWARE.
 *********************************************************************************************************************/
#ifndef DMA_ADC_TRANSFER_H_
#define DMA_ADC_TRANSFER_H_
/*********************************************************************************************************************/
/*-----------------------------------------------------Includes------------------------------------------------------*/
/*********************************************************************************************************************/
#include "Ifx_Types.h"
#include "IfxDma_Dma.h"
/*********************************************************************************************************************/
/*------------------------------------------------------Macros-------------------------------------------------------*/
/*********************************************************************************************************************/
/* DMA Macros */
#define DMA_CHANNEL             1    /* DMA Channel used in this example (0 lowest priority - 127 highest priority) */
#define ISR_PRIORITY_DMA        20          /* Priority for interrupt after DMA transfer done                       */
#define N_TRANSFER              5           /* Number of transfer in 1 transaction                                  */
/* Start address of the CPU0 Data Scratch-Pad SRAM: destination address for the DMA channel */
#define DEST_ADDR               0x70000000
/* Start address of the EVADC result register Group 0-Channel 0 (EVADC_G0RES0).
 * The Result Register addresses can be found in IfxEvadc_reg.h */
#define SRC_ADDR                0xF0020700
/* EVADC Macros */
#define GROUPID_0               IfxEvadc_GroupId_0  /* EVADC group                                                  */
#define CHANNEL_ID              0           /* EVADC Channel ID                                                     */
#define ISR_PRIORITY_ADC        DMA_CHANNEL /* Priority for interrupt after ADC conversion. Should be equal to
                                             * DMA_CHANNEL when DMA is the Interrupt Service Provider               */
#define NO_OPTIONS              0           /* Macro for adding a channel in the EVADC queue with no refill option  */
/*********************************************************************************************************************/
/*------------------------------------------------Function Prototypes------------------------------------------------*/
/*********************************************************************************************************************/
extern uint32 Dma_DestinationAdcBuffer[N_TRANSFER];
extern IfxDma_Dma_Channel g_DMAchn;
void Dma_Init(void);
#endif /* DMA_ADC_TRANSFER_H_ */
