/**********************************************************************************************************************
 * \file SafetyKit_Main.c
 * \copyright Copyright (C) Infineon Technologies AG 2019
 *
 * Use of this file is subject to the terms of use agreed between (i) you or the company in which ordinary course of
 * business you are acting and (ii) Infineon Technologies AG or its licensees. If and as long as no such terms of use
 * are agreed, use of this file is subject to following:
 *
 * Boost Software License - Version 1.0 - August 17th, 2003
 *
 * Permission is hereby granted, free of charge, to any person or organization obtaining a copy of the software and
 * accompanying documentation covered by this license (the "Software") to use, reproduce, display, distribute, execute,
 * and transmit the Software, and to prepare derivative works of the Software, and to permit third-parties to whom the
 * Software is furnished to do so, all subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including the above license grant, this restriction
 * and the following disclaimer, must be included in all copies of the Software, in whole or in part, and all
 * derivative works of the Software, unless such copies or derivative works are solely in the form of
 * machine-executable object code generated by a source language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
 * COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN
 * CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 * IN THE SOFTWARE.
 *********************************************************************************************************************/


/*********************************************************************************************************************/
/*-----------------------------------------------------Includes------------------------------------------------------*/
/*********************************************************************************************************************/
#include "SafetyKit_Fce.h"
#include "SafetyKit_NvmPflash.h"
#include "SafetyKit_Main.h"
#include "SafetyKit_Cfg.h"
#include "SafetyKit_RegMon.h"
#include "SafetyKit_DieTemp.h"
#include "SafetyKit_VoltMon.h"
#include "SafetyKit_InternalWatchdogs.h"
#include "SMU.h"
#include "SafetyKit_SmuCmds.h"
#include "IfxSmu.h"
#include "IfxSmu_Smu.h"
#include "SafetyKit_SSW_02_MCU_FW_CHECK.h"
/*********************************************************************************************************************/
/*------------------------------------------------------Macros-------------------------------------------------------*/
/*********************************************************************************************************************/
/*********************************************************************************************************************/
/*-------------------------------------------------Global variables--------------------------------------------------*/
/*********************************************************************************************************************/
SafetyKitStatusType             g_SafetyKitStatus;        /* global variable for safety kit status                   */
volatile Ifx_SMU_AG             g_SafetyKitSmuAlarmRegStatusEnlessLoop[IFXSMU_NUM_ALARM_GROUPS]; /* SMM Alarm Array  */
/*********************************************************************************************************************/
/*-------------------------------------------------Data Structures---------------------------------------------------*/
/*********************************************************************************************************************/

/*********************************************************************************************************************/
/*------------------------------------------------Function Prototypes------------------------------------------------*/
/*********************************************************************************************************************/
void runSMOnlyOnce(void);
/*********************************************************************************************************************/
/*---------------------------------------------Function Implementations----------------------------------------------*/
/*********************************************************************************************************************/
/*
 * initialize safety kit
 * */
void initSafetyKit(void)
{
    /* Initialize EMEM module */
    initEMEM();
    /* Execute SM:REG_MONITOR_TEST */
    safetyKitRunRegMonitorTest();
    /* Clear all SMU alarms, some alarm flags might be set due to start up software */
    safetyKitClearAllSmuAlarms();
    /* Initialize the SMU to configure and map the alarms
     * SM:SMU:CONFIG and Enable the security Key test */
    initSMUModule();
    /* Initialize Secondary Voltage monitors and their threshold values */
    initVoltageMonitors();
    /* Initialize under voltage simulation */
    initUndervoltageSimulation();
    /* SM:FCE:CRC_CFG */
    initFCECRC();
    /* Initialization of SafetyKit is done */
    g_SafetyKitStatus.safetyKitInitDone = TRUE;
    /* SMs which only need to run once in the beginning */
    runSMOnlyOnce();
}
/*
 * This function is to run SMs which are required only once
 * */
void runSMOnlyOnce(void)
{
    /* run SM:PFLASH:INTEGRITY_CHECK, needed only once */
    runIntegrityCheckPFLASH();
}
