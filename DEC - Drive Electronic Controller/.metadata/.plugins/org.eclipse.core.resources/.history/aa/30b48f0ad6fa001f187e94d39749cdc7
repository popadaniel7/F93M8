#include "ColDet.h"
#include "Ain.h"
#include <stdio.h>
#include <stdlib.h>
#include <stdbool.h>
#include <math.h>
#include "time.h"
#include "Dem.h"

#define TIME_TO_COLLISION_WARN   0.3f
#define TIME_TO_COLLISION_BRAKE  0.15f
#define DISTANCE_STABLE_THRESHOLD_CM  0.5f

static uint32 ColDet_MainCounter = 0u;
CollisionState ColDet_CanTx_CollisionState = COLLISION_SAFE;
uint8 ColDet_CanTx_BrakeLevel = 0u;  
uint8 ColDet_CanTx_IrSenStat = 0u;
uint8 ColDet_CanRx_CalculatedSpeed = 0u;

void ColDet_MainFunction(void);

void ColDet_MainFunction(void)
{
    uint32 distanceCm = 0xFFFFU;
    uint32 lastDistanceCm = 0xFFFFU;
    double speed = 0.0f;
    double ttc = 0.0f;
    bool objectDetected = 0u;

    speed = ColDet_CanRx_CalculatedSpeed;        
    distanceCm = Ain_IRSensorValue;
    if (abs(distanceCm - lastDistanceCm) <= DISTANCE_STABLE_THRESHOLD_CM)
    {
        distanceCm = lastDistanceCm;
    }
    else
    {
        /* Do nothing. */
    }

    lastDistanceCm = distanceCm;

    objectDetected = (distanceCm < 0xFFFFU);

    if (objectDetected && speed > 0.0f)
    {
        ttc = distanceCm / speed;
    }
    else
    {
        ttc = 9999u; 
    }
    
    switch (ColDet_CanTx_CollisionState)
    {
        case COLLISION_SAFE:
            if (objectDetected && ttc <= TIME_TO_COLLISION_BRAKE)
            {                
                ColDet_CanTx_CollisionState = COLLISION_BRAKE;
                ColDet_CanTx_BrakeLevel = 100u;                          
            }
            else if (objectDetected && ttc <= TIME_TO_COLLISION_WARN) 
            {                
                ColDet_CanTx_CollisionState = COLLISION_WARNING;               
                ColDet_CanTx_BrakeLevel = 0u;             
            }
            else
            {
                ColDet_CanTx_CollisionState = COLLISION_SAFE;
                ColDet_CanTx_BrakeLevel = 0u;
            }
            break;

        case COLLISION_WARNING:
            if (!objectDetected || ttc > TIME_TO_COLLISION_WARN)
            {
                ColDet_CanTx_CollisionState = COLLISION_SAFE;
                ColDet_CanTx_BrakeLevel = 0u;
            }
            else if (ttc <= TIME_TO_COLLISION_BRAKE)
            {
                ColDet_CanTx_CollisionState = COLLISION_BRAKE;
                ColDet_CanTx_BrakeLevel = 100u;
            }
            else
            {
                if(ColDet_MainCounter % 60 == 0u)
                {
                    if (80u > ColDet_CanTx_BrakeLevel)
                    {
                        ColDet_CanTx_BrakeLevel += 10u;
                    }
                    else
                    {
                        /* Do nothing. */
                    }
                }
                else
                {
                    /* Do nothing. */
                }
            }
            break;

        case COLLISION_BRAKE:
            if (!objectDetected || ttc > TIME_TO_COLLISION_WARN)
            {
                ColDet_CanTx_CollisionState = COLLISION_SAFE;
                ColDet_CanTx_BrakeLevel = 0u;
            }
            else if (ttc > TIME_TO_COLLISION_BRAKE && ttc <= TIME_TO_COLLISION_WARN)
            {
                ColDet_CanTx_CollisionState = COLLISION_WARNING;
                ColDet_CanTx_BrakeLevel = 50u;
            }
            else
            {
                ColDet_CanTx_CollisionState = COLLISION_BRAKE;
                ColDet_CanTx_BrakeLevel = 100u;
            }
            break;
    }

    ColDet_CanTx_IrSenStat = ColDet_CanTx_CollisionState;

    ColDet_MainCounter++;
}
