<?xml version="1.0" encoding="UTF-8" ?>
<!--file template_gpt12_timer.xml                                                   -->
<!--brief Embedded Power Modules configuration                                      -->
<!--                                                                                -->
<!--Copyright (c) 2017, Infineon Technologies AG                                    -->
<!--All rights reserved.                                                            -->
<!--                                                                                -->
<!--Redistribution and use in source and binary forms, with or without modification,-->
<!--are permitted provided that the following conditions are met:                   -->
<!--                                                                                -->
<!--  Redistributions of source code must retain the above copyright notice, this   -->
<!--  list of conditions and the following disclaimer.                              -->
<!--                                                                                -->
<!--  Redistributions in binary form must reproduce the above copyright notice,     -->
<!--  this list of conditions and the following disclaimer in the documentation     -->
<!--  and/or other materials provided with the distribution.                        -->
<!--                                                                                -->
<!--  Neither the name of the copyright holders nor the names of its contributors   -->
<!--  may be used to endorse or promote products derived from this software without -->
<!--  specific prior written permission.                                            -->
<!--                                                                                -->
<!--THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND -->
<!--ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED   -->
<!--WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE          -->
<!--DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE    -->
<!--FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL      -->
<!--DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR      -->
<!--SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER      -->
<!--CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,   -->
<!--OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE   -->
<!--OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.            -->
<!--                                                                                -->
<!--********************************************************************************-->
<!--        Infineon Embedded Power Family TLE989x Module Configuration File        -->
<!--********************************************************************************-->
<!--                                                                                -->
<!--********************************************************************************-->
<!--                               Author(s) Identity                               -->
<!--********************************************************************************-->
<!--   Initials     Name                                                            -->
<!--   DM           Daniel Mysliwitz                                                -->
<!--   JO           Julia Ott                                                       -->
<!--   BG           Blandine Guillot                                                -->
<!--********************************************************************************-->
<!--                                                                                -->
<!--********************************************************************************-->
<!--                            Revision Control History                            -->
<!--********************************************************************************-->
<!-- V0.0.1: 2020-09-11, BG:   Initial version                                      -->
<!-- V0.1.0: 2020-10-23, BG:   EP-482: Added doctype and checksum                   -->
<!--********************************************************************************-->

<ifxmlcfg version="2.1.12">
  <checksum>68d0e1122919f9f52ff74fc1d64106aafa9776c2a3e35d9541b792bfb72741ef</checksum>
  <version label="V0.1.0"/>
  <svd file="tle989x.svd"/>
  <usesPython/>
  <verticalcontainer label="Timer Template" visible="false">
    <!-- Timer -->
    <timer visible="false" define="CORETIMER_$IDX$" svd="0" interval="1" singleShot="1" run="0" header="">
      <!-- Input -->
      <action cond="GPT12.$IDX$CON_$IDX$M==0" event="changed" cmd="setDef" data="$IDX$IN=$IDX$IN n/a"/>
      <action cond="GPT12.$IDX$CON_$IDX$M!=0" event="changed" cmd="setDef" data="$IDX$IN=GPT12_$IDX$.PISEL_IS$IDX$IN.label"/>
      <!-- Individual prescaler -->
      <action cond="((GPT12.$IDX$CON_$IDX$M==0).+(GPT12.$IDX$CON_$IDX$M==2).+(GPT12.$IDX$CON_$IDX$M==3)).*(GPT12.$IDX$CON_$IDX$I==0)" event="changed" cmd="setDef" data="$IDX$PS=1"/>
      <action cond="((GPT12.$IDX$CON_$IDX$M==0).+(GPT12.$IDX$CON_$IDX$M==2).+(GPT12.$IDX$CON_$IDX$M==3)).*(GPT12.$IDX$CON_$IDX$I==1)" event="changed" cmd="setDef" data="$IDX$PS=2"/>
      <action cond="((GPT12.$IDX$CON_$IDX$M==0).+(GPT12.$IDX$CON_$IDX$M==2).+(GPT12.$IDX$CON_$IDX$M==3)).*(GPT12.$IDX$CON_$IDX$I==2)" event="changed" cmd="setDef" data="$IDX$PS=4"/>
      <action cond="((GPT12.$IDX$CON_$IDX$M==0).+(GPT12.$IDX$CON_$IDX$M==2).+(GPT12.$IDX$CON_$IDX$M==3)).*(GPT12.$IDX$CON_$IDX$I==3)" event="changed" cmd="setDef" data="$IDX$PS=8"/>
      <action cond="((GPT12.$IDX$CON_$IDX$M==0).+(GPT12.$IDX$CON_$IDX$M==2).+(GPT12.$IDX$CON_$IDX$M==3)).*(GPT12.$IDX$CON_$IDX$I==4)" event="changed" cmd="setDef" data="$IDX$PS=16"/>
      <action cond="((GPT12.$IDX$CON_$IDX$M==0).+(GPT12.$IDX$CON_$IDX$M==2).+(GPT12.$IDX$CON_$IDX$M==3)).*(GPT12.$IDX$CON_$IDX$I==5)" event="changed" cmd="setDef" data="$IDX$PS=32"/>
      <action cond="((GPT12.$IDX$CON_$IDX$M==0).+(GPT12.$IDX$CON_$IDX$M==2).+(GPT12.$IDX$CON_$IDX$M==3)).*(GPT12.$IDX$CON_$IDX$I==6)" event="changed" cmd="setDef" data="$IDX$PS=64"/>
      <action cond="((GPT12.$IDX$CON_$IDX$M==0).+(GPT12.$IDX$CON_$IDX$M==2).+(GPT12.$IDX$CON_$IDX$M==3)).*(GPT12.$IDX$CON_$IDX$I==7)" event="changed" cmd="setDef" data="$IDX$PS=128"/>
      <!-- Up/Down Direction Control -->
      <action cond="(GPT12.$IDX$CON_$IDX$M!=4).*(GPT12.$IDX$CON_$IDX$M!=5).*(GPT12.$IDX$CON_$IDX$UDE==0).*(GPT12.$IDX$CON_$IDX$UD==0)" event="changed" cmd="setDef" data="$IDX$UD=Up;$IDX$EUD=$IDX$EUD n/a"/>
      <action cond="(GPT12.$IDX$CON_$IDX$M!=4).*(GPT12.$IDX$CON_$IDX$M!=5).*(GPT12.$IDX$CON_$IDX$UDE==0).*(GPT12.$IDX$CON_$IDX$UD==1)" event="changed" cmd="setDef" data="$IDX$UD=Down;$IDX$EUD=$IDX$EUD n/a"/>
      <action cond="(GPT12.$IDX$CON_$IDX$M!=4).*(GPT12.$IDX$CON_$IDX$M!=5).*(GPT12.$IDX$CON_$IDX$UDE==1)" event="changed" cmd="setDef" data="$IDX$UD=UD f($IDX$EUD);$IDX$EUD=GPT12_$IDX$.PISEL_IS$IDX$EUD_DIRCTRL.label"/>
      <action cond="(GPT12.$IDX$CON_$IDX$M==4).+(GPT12.$IDX$CON_$IDX$M==5).*(GPT12.$IDX$CON_$IDX$I_INC==0).*(GPT12.$IDX$CON_$IDX$UDE==0).*(GPT12.$IDX$CON_$IDX$UD==0)" event="changed" cmd="setDef" data="$IDX$UD=Up;$IDX$EUD=$IDX$EUD n/a"/>
      <action cond="(GPT12.$IDX$CON_$IDX$M==4).+(GPT12.$IDX$CON_$IDX$M==5).*(GPT12.$IDX$CON_$IDX$I_INC==0).*(GPT12.$IDX$CON_$IDX$UDE==0).*(GPT12.$IDX$CON_$IDX$UD==1)" event="changed" cmd="setDef" data="$IDX$UD=Down;$IDX$EUD=$IDX$EUD n/a"/>
      <action cond="(GPT12.$IDX$CON_$IDX$M==4).+(GPT12.$IDX$CON_$IDX$M==5).*(GPT12.$IDX$CON_$IDX$I_INC==0).*(GPT12.$IDX$CON_$IDX$UDE==1)" event="changed" cmd="setDef" data="$IDX$UD=UD f($IDX$EUD);$IDX$EUD=GPT12_$IDX$.PISEL_IS$IDX$EUD_DIRCTRL.label"/>
      <action cond="(GPT12.$IDX$CON_$IDX$M==4).+(GPT12.$IDX$CON_$IDX$M==5).*(GPT12.$IDX$CON_$IDX$I_INC!=0).*(GPT12.$IDX$CON_$IDX$UDE==0).*(GPT12.$IDX$CON_$IDX$UD==0)" event="changed" cmd="setDef" data="$IDX$UD=Up;$IDX$EUD=GPT12_$IDX$.PISEL_IS$IDX$EUD.label"/>
      <action cond="(GPT12.$IDX$CON_$IDX$M==4).+(GPT12.$IDX$CON_$IDX$M==5).*(GPT12.$IDX$CON_$IDX$I_INC!=0).*(GPT12.$IDX$CON_$IDX$UDE==0).*(GPT12.$IDX$CON_$IDX$UD==1)" event="changed" cmd="setDef" data="$IDX$UD=Down;$IDX$EUD=GPT12_$IDX$.PISEL_IS$IDX$EUD.label"/>
      <action cond="(GPT12.$IDX$CON_$IDX$M==4).+(GPT12.$IDX$CON_$IDX$M==5).*(GPT12.$IDX$CON_$IDX$I_INC!=0).*(GPT12.$IDX$CON_$IDX$UDE==1)" event="changed" cmd="setDef" data="$IDX$UD=UD f($IDX$EUD);$IDX$EUD=GPT12_$IDX$.PISEL_IS$IDX$EUD.label"/>
      <!-- Overflow/Underflow Toggle Latch -->
      <action event="changed" cmd="setDef" data="$IDX$LATCH=GPT12.$CORE_IDX$CON_$IDX$OTL"/>
      <!-- Overflow/Underflow Output -->
      <action cond="GPT12_$IDX$.$CORE_IDX$CON_$IDX$OE==0" event="changed" cmd="setDef" data="$IDX$OUT=$IDX$OUT n/a"/>
      <action cond="GPT12_$IDX$.$CORE_IDX$CON_$IDX$OE==1" event="changed" cmd="setDef" data="$IDX$OUT=$IDX$OUT_0"/>
      <action cond="GPT12_$IDX$.$CORE_IDX$CON_$IDX$OE==2" event="changed" cmd="setDef" data="$IDX$OUT=$IDX$OUT_1"/>
    </timer>

    <timer visible="false" define="AUXTIMER_$IDX$" svd="0" interval="1" singleShot="1" run="0" header="">
      <!-- Input -->
      <action cond="(GPT12.$IDX$CON_$IDX$M==0).+(GPT12.$IDX$CON_$IDX$M==1)" event="changed" cmd="setDef" data="$IDX$IN=$IDX$IN n/a"/>
      <action cond="(GPT12.$IDX$CON_$IDX$M==2).+(GPT12.$IDX$CON_$IDX$M==5)" event="changed" cmd="setDef" data="$IDX$IN=GPT12_$IDX$.PISEL_IS$IDX$IN_OTL.label"/>
      <action cond="(GPT12.$IDX$CON_$IDX$M!=0).*(GPT12.$IDX$CON_$IDX$M!=1).*(GPT12.$IDX$CON_$IDX$M!=2).*(GPT12.$IDX$CON_$IDX$M!=5)" event="changed" cmd="setDef" data="$IDX$IN=GPT12_$IDX$.PISEL_IS$IDX$IN.label"/>
      <!-- Input for concatenation purposes -->
      <action cond="(GPT12.T2CON_T2M==2).*(GPT12_T2.PISEL_IST2IN_OTL==2)" event="changed" cmd="setDef" data="T2IN=T2IN n/a"/>
      <action cond="(GPT12.T4CON_T4M==2).*(GPT12_T4.PISEL_IST4IN_OTL==4)" event="changed" cmd="setDef" data="T4IN=T4IN n/a"/>
      <action cond="(GPT12.T5CON_T5M==2).*(GPT12_T5.PISEL_IST5IN_OTL==2)" event="changed" cmd="setDef" data="T5IN=T5IN n/a"/>
      <!-- Individual prescaler -->
      <action cond="((GPT12.$IDX$CON_$IDX$M==1).+(GPT12.$IDX$CON_$IDX$M==3).+(GPT12.$IDX$CON_$IDX$M==4)).*(GPT12.$IDX$CON_$IDX$I==0)" event="changed" cmd="setDef" data="$IDX$PS=1"/>
      <action cond="((GPT12.$IDX$CON_$IDX$M==1).+(GPT12.$IDX$CON_$IDX$M==3).+(GPT12.$IDX$CON_$IDX$M==4)).*(GPT12.$IDX$CON_$IDX$I==1)" event="changed" cmd="setDef" data="$IDX$PS=2"/>
      <action cond="((GPT12.$IDX$CON_$IDX$M==1).+(GPT12.$IDX$CON_$IDX$M==3).+(GPT12.$IDX$CON_$IDX$M==4)).*(GPT12.$IDX$CON_$IDX$I==2)" event="changed" cmd="setDef" data="$IDX$PS=4"/>
      <action cond="((GPT12.$IDX$CON_$IDX$M==1).+(GPT12.$IDX$CON_$IDX$M==3).+(GPT12.$IDX$CON_$IDX$M==4)).*(GPT12.$IDX$CON_$IDX$I==3)" event="changed" cmd="setDef" data="$IDX$PS=8"/>
      <action cond="((GPT12.$IDX$CON_$IDX$M==1).+(GPT12.$IDX$CON_$IDX$M==3).+(GPT12.$IDX$CON_$IDX$M==4)).*(GPT12.$IDX$CON_$IDX$I==4)" event="changed" cmd="setDef" data="$IDX$PS=16"/>
      <action cond="((GPT12.$IDX$CON_$IDX$M==1).+(GPT12.$IDX$CON_$IDX$M==3).+(GPT12.$IDX$CON_$IDX$M==4)).*(GPT12.$IDX$CON_$IDX$I==5)" event="changed" cmd="setDef" data="$IDX$PS=32"/>
      <action cond="((GPT12.$IDX$CON_$IDX$M==1).+(GPT12.$IDX$CON_$IDX$M==3).+(GPT12.$IDX$CON_$IDX$M==4)).*(GPT12.$IDX$CON_$IDX$I==6)" event="changed" cmd="setDef" data="$IDX$PS=64"/>
      <action cond="((GPT12.$IDX$CON_$IDX$M==1).+(GPT12.$IDX$CON_$IDX$M==3).+(GPT12.$IDX$CON_$IDX$M==4)).*(GPT12.$IDX$CON_$IDX$I==7)" event="changed" cmd="setDef" data="$IDX$PS=128"/>
      <!-- Up/Down Direction Control -->
      <action cond="(GPT12.$IDX$CON_$IDX$M!=7).*(GPT12.$IDX$CON_$IDX$M!=8).*(GPT12.$IDX$CON_$IDX$UDE==0).*(GPT12.$IDX$CON_$IDX$UD==0)" event="changed" cmd="setDef" data="$IDX$UD=Up;$IDX$EUD=$IDX$EUD n/a"/>
      <action cond="(GPT12.$IDX$CON_$IDX$M!=7).*(GPT12.$IDX$CON_$IDX$M!=8).*(GPT12.$IDX$CON_$IDX$UDE==0).*(GPT12.$IDX$CON_$IDX$UD==1)" event="changed" cmd="setDef" data="$IDX$UD=Down;$IDX$EUD=$IDX$EUD n/a"/>
      <action cond="(GPT12.$IDX$CON_$IDX$M!=7).*(GPT12.$IDX$CON_$IDX$M!=8).*(GPT12.$IDX$CON_$IDX$UDE==1)" event="changed" cmd="setDef" data="$IDX$UD=UD f($IDX$EUD);$IDX$EUD=GPT12_$IDX$.PISEL_IS$IDX$EUD_DIRCTRL.label"/>
      <action cond="(GPT12.$IDX$CON_$IDX$M==7).+(GPT12.$IDX$CON_$IDX$M==8).*(GPT12.$IDX$CON_$IDX$I_INC==0).*(GPT12.$IDX$CON_$IDX$UDE==0).*(GPT12.$IDX$CON_$IDX$UD==0)" event="changed" cmd="setDef" data="$IDX$UD=Up;$IDX$EUD=$IDX$EUD n/a"/>
      <action cond="(GPT12.$IDX$CON_$IDX$M==7).+(GPT12.$IDX$CON_$IDX$M==8).*(GPT12.$IDX$CON_$IDX$I_INC==0).*(GPT12.$IDX$CON_$IDX$UDE==0).*(GPT12.$IDX$CON_$IDX$UD==1)" event="changed" cmd="setDef" data="$IDX$UD=Down;$IDX$EUD=$IDX$EUD n/a"/>
      <action cond="(GPT12.$IDX$CON_$IDX$M==7).+(GPT12.$IDX$CON_$IDX$M==8).*(GPT12.$IDX$CON_$IDX$I_INC==0).*(GPT12.$IDX$CON_$IDX$UDE==1)" event="changed" cmd="setDef" data="$IDX$UD=UD f($IDX$EUD);$IDX$EUD=GPT12_$IDX$.PISEL_IS$IDX$EUD_DIRCTRL.label"/>
      <action cond="(GPT12.$IDX$CON_$IDX$M==7).+(GPT12.$IDX$CON_$IDX$M==8).*(GPT12.$IDX$CON_$IDX$I_INC!=0).*(GPT12.$IDX$CON_$IDX$UDE==0).*(GPT12.$IDX$CON_$IDX$UD==0)" event="changed" cmd="setDef" data="$IDX$UD=Up;$IDX$EUD=GPT12_$IDX$.PISEL_IS$IDX$EUD.label"/>
      <action cond="(GPT12.$IDX$CON_$IDX$M==7).+(GPT12.$IDX$CON_$IDX$M==8).*(GPT12.$IDX$CON_$IDX$I_INC!=0).*(GPT12.$IDX$CON_$IDX$UDE==0).*(GPT12.$IDX$CON_$IDX$UD==1)" event="changed" cmd="setDef" data="$IDX$UD=Down;$IDX$EUD=GPT12_$IDX$.PISEL_IS$IDX$EUD.label"/>
      <action cond="(GPT12.$IDX$CON_$IDX$M==7).+(GPT12.$IDX$CON_$IDX$M==8).*(GPT12.$IDX$CON_$IDX$I_INC!=0).*(GPT12.$IDX$CON_$IDX$UDE==1)" event="changed" cmd="setDef" data="$IDX$UD=UD f($IDX$EUD);$IDX$EUD=GPT12_$IDX$.PISEL_IS$IDX$EUD.label"/>
      <!-- Mode Reload/Capture -> only for GPT1 -->
      <action cond="GPT12.$IDX$CON_$IDX$M==5" event="changed" cmd="setDef" data="$IDX$CR=Reload"/>
      <action cond="GPT12.$IDX$CON_$IDX$M==6" event="changed" cmd="setDef" data="$IDX$CR=Capture"/>
      <action cond="(GPT12.$IDX$CON_$IDX$M!=5).*(GPT12.$IDX$CON_$IDX$M!=6)" event="changed" cmd="setDef" data="$IDX$CR=n/a"/>
    </timer>

    <timer visible="false" define="TIMER_$IDX$" svd="0" interval="1" singleShot="1" run="0" header="">
      <!-- Input Selection -->
      <action cond="GPT12.$IDX$CON_$IDX$M==0" event="changed" cmd="setDef" data="$IDX$INSEL=$IDX$IN n/a"/>
      <action cond="GPT12.$IDX$CON_$IDX$M!=0" event="changed" cmd="setDef" data="$IDX$INSEL=GPT12_$IDX$.T5CON_CT3.label"/>
      <!-- Input -->
      <action cond="GPT12.$IDX$CON_$IDX$M==0" event="changed" cmd="setDef" data="$IDX$IN=$IDX$IN n/a"/>
      <action cond="(GPT12.$IDX$CON_$IDX$M!=0).*($IDX$INSEL!=0)" event="changed" cmd="setDef" data="$IDX$IN=T3IN/T3EUD selection"/>
      <action cond="(GPT12.$IDX$CON_$IDX$M!=0).*($IDX$INSEL==0)" event="changed" cmd="setDef" data="$IDX$IN=GPT12_CAPREL.PISEL_IS$IDX$IN.label"/>
    </timer>

  </verticalcontainer>
</ifxmlcfg>
