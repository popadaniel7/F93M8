#include "DataRecorder.h"
#include "RevCam.h"
__attribute__((section(".ccmram"))) long long test = 0x00;
__attribute__((section(".ccmram"))) uint32 DataRecorder_RxSig_VehicleSpeed = 0x00;
__attribute__((section(".ccmram"))) uint8 DataRecorder_RxSig_DriveCycleStatus = 0x00;
__attribute__((section(".ccmram"))) uint8 DataRecorder_RxSig_LVBat = 0x00;
__attribute__((section(".ccmram"))) uint8 DataRecorder_RxSig_CurrentConsumptionInstantLV = 0x00;
__attribute__((section(".ccmram"))) uint32 DataRecorder_MainCounter = 0x00;
__attribute__((section(".ccmram"))) float DataRecorder_SpeedInKmS = 0x00;
__attribute__((section(".ccmram"))) float DataRecorder_AuxAvgSpeed = 0x00;
__attribute__((section(".ccmram"))) uint32 DataRecorder_SumOfLV = 0x00;
__attribute__((section(".ccmram"))) uint32 DataRecorder_SumOfCurrent = 0x00;
__attribute__((section(".ccmram"))) uint32 DataRecorder_SpeedCounterActive = 0x00;
__attribute__((section(".ccmram"))) uint32 DataRecorder_EndOfDcyFirstCallFlag = 0x00;
__attribute__((section(".ccmram"))) uint32 DataRecorder_CcmCounter[DATARECORDER_CCM_MAXNUMBER] = {0x00};
__attribute__((section(".ccmram"))) uint32 DataRecorder_AvgSpeed = 0x00;
__attribute__((section(".ccmram"))) uint32 DataRecorder_AvgLowVoltageBattery = 0;
__attribute__((section(".ccmram"))) uint32 DataRecorder_AvgSpeedPerDcy = 0x00;
__attribute__((section(".ccmram"))) uint32 DataRecorder_KilometerTotal = 0x00;
__attribute__((section(".ccmram"))) uint32 DataRecorder_KilometerPerDcy = 0x00;
__attribute__((section(".ccmram"))) uint32 DataRecorder_TimeSpentPerDcy = 0x00;
__attribute__((section(".ccmram"))) uint32 DataRecorder_TimeSpentOverall = 0x00;
__attribute__((section(".ccmram"))) uint32 DataRecorder_NumberOfDcy = 0x00;
__attribute__((section(".ccmram"))) uint32 DataRecorder_MaxCurrentConsumptionLV = 0x00;
__attribute__((section(".ccmram"))) uint32 DataRecorder_MinCurrentConsumptionLV = 0x00;
__attribute__((section(".ccmram"))) uint32 DataRecorder_AvgCurrentConsumptionLV = 0x00;
__attribute__((section(".ccmram"))) uint32 DataRecorder_ReverseCameraStatus = 0x00;
__attribute__((section(".ccmram"))) uint32 DataRecorder_McuTemperature = 0x00;
__attribute__((section(".ccmram"))) uint32 DataRecorder_BackupBatteryStatus = 0x00;
__attribute__((section(".ccmram"))) uint32 DataRecorder_ResetCounter[20] = {0x00};
extern __attribute__((section(".ccmram"))) uint32 Ain_MeasValues[3];
extern __attribute__((section(".ccmram"))) uint32 RevCam_DcmiStatus;
extern __attribute__((section(".ccmram"))) uint32 RevCam_I2cStatus;
extern __attribute__((section(".ccmram"))) float Ain_McuTemp;
extern __attribute__((section(".ccmram"))) float Ain_Vbat;
extern __attribute__((section(".ccmram"))) uint32 vehSpeedConv;
void DataRecorder_MainFunction(void);
void DataRecorder_MainFunction(void)
{
	if(DATARECORDER_DCY_END == DataRecorder_RxSig_DriveCycleStatus && 0x00 == DataRecorder_EndOfDcyFirstCallFlag)
	{
		DataRecorder_EndOfDcyFirstCallFlag = 0x01;
		DataRecorder_TimeSpentPerDcy = 0;
		DataRecorder_KilometerPerDcy = 0;
		DataRecorder_AvgSpeedPerDcy = 0;
		DataRecorder_NumberOfDcy++;
		DataRecorder_McuTemperature = Ain_McuTemp;
		DataRecorder_BackupBatteryStatus = Ain_Vbat;
		DataRecorder_ReverseCameraStatus = (uint8)(RevCam_DcmiStatus | (RevCam_I2cStatus << 8));
	}
	else
	{
		/* Do nothing. */
	}
	if(DATARECORDER_DCY_START == DataRecorder_RxSig_DriveCycleStatus)
	{
		DataRecorder_TimeSpentPerDcy += 5;
		DataRecorder_TimeSpentOverall += 5;
		if(0x00 != DataRecorder_RxSig_VehicleSpeed)
		{
			DataRecorder_SpeedCounterActive += 5;
			DataRecorder_SpeedInKmS = vehSpeedConv / 60;
			DataRecorder_KilometerPerDcy += DataRecorder_SpeedInKmS * 5 / 60000;
			DataRecorder_KilometerTotal += DataRecorder_SpeedInKmS * 5 / 60000;
			DataRecorder_AuxAvgSpeed += DataRecorder_SpeedInKmS;
			if(DataRecorder_SpeedCounterActive % 60000 == 0 && 0 != DataRecorder_SpeedCounterActive)
			{
				DataRecorder_AvgSpeed += DataRecorder_AuxAvgSpeed / (DataRecorder_TimeSpentOverall / 60000);
				DataRecorder_AvgSpeedPerDcy += DataRecorder_AuxAvgSpeed / (DataRecorder_TimeSpentPerDcy / 60000);
				DataRecorder_AuxAvgSpeed = 0;
			}
			else
			{
				/* Do nothing. */
			}
		}
		else
		{
			/* Do nothing. */
		}
	}
	else
	{
		/* Do nothing. */
	}
	if(0 == DataRecorder_MainCounter % 1000 && 0 != DataRecorder_MainCounter && 0 != DataRecorder_RxSig_CurrentConsumptionInstantLV)
	{
		if(DataRecorder_MinCurrentConsumptionLV > DataRecorder_RxSig_CurrentConsumptionInstantLV) DataRecorder_MinCurrentConsumptionLV = DataRecorder_RxSig_CurrentConsumptionInstantLV;
		else if(DataRecorder_MaxCurrentConsumptionLV < DataRecorder_RxSig_CurrentConsumptionInstantLV) DataRecorder_MaxCurrentConsumptionLV = DataRecorder_RxSig_CurrentConsumptionInstantLV;
		else
		{
			/* Do nothing. */
		}
		DataRecorder_AvgLowVoltageBattery = DataRecorder_SumOfLV / DataRecorder_MainCounter;
		DataRecorder_AvgCurrentConsumptionLV = DataRecorder_SumOfCurrent / DataRecorder_MainCounter;
	}
	else
	{
		DataRecorder_SumOfLV += DataRecorder_RxSig_LVBat;
		DataRecorder_SumOfCurrent += DataRecorder_RxSig_CurrentConsumptionInstantLV;
	}
	DataRecorder_MainCounter++;
}
