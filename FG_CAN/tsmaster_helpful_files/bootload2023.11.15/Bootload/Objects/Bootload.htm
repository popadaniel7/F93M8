<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\Bootload.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\Bootload.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 6190004: Last Updated: Tue Oct 31 10:51:51 2023
<BR><P>
<H3>Maximum Stack Usage =        212 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
N_USData_indication &rArr; UdsServerRequestProcess &rArr; udsServer_sendResponse &rArr; iso_can_tp_N_USData_request &rArr; QueueOut
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[2c]">SVC_Handler_main</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2c]">SVC_Handler_main</a><BR>
 <LI><a href="#[7]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">DebugMon_Handler</a><BR>
 <LI><a href="#[13]">NVIC_IRQ10_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[13]">NVIC_IRQ10_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[4]">BusFault_Handler</a> from isr_exceptions.o(.text.BusFault_Handler) referenced from startup_tle989x.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from startup_tle989x.o(.text) referenced from startup_tle989x.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from isr_exceptions.o(.text.HardFault_Handler) referenced from startup_tle989x.o(RESET)
 <LI><a href="#[2d]">L_Data_request</a> from tp_config.o(.text.L_Data_request) referenced 2 times from tp_config.o(.text.init_for_all_links)
 <LI><a href="#[3]">MemManage_Handler</a> from isr_exceptions.o(.text.MemManage_Handler) referenced from startup_tle989x.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from isr_exceptions.o(.text.NMI_Handler) referenced from startup_tle989x.o(RESET)
 <LI><a href="#[a]">NVIC_IRQ0_Handler</a> from isr_nvic_irq0_handler.o(.text.NVIC_IRQ0_Handler) referenced from startup_tle989x.o(RESET)
 <LI><a href="#[13]">NVIC_IRQ10_Handler</a> from startup_tle989x.o(.text) referenced from startup_tle989x.o(RESET)
 <LI><a href="#[14]">NVIC_IRQ11_Handler</a> from startup_tle989x.o(.text) referenced from startup_tle989x.o(RESET)
 <LI><a href="#[15]">NVIC_IRQ12_Handler</a> from isr_nvic_irq12_handler.o(.text.NVIC_IRQ12_Handler) referenced from startup_tle989x.o(RESET)
 <LI><a href="#[16]">NVIC_IRQ13_Handler</a> from startup_tle989x.o(.text) referenced from startup_tle989x.o(RESET)
 <LI><a href="#[17]">NVIC_IRQ14_Handler</a> from startup_tle989x.o(.text) referenced from startup_tle989x.o(RESET)
 <LI><a href="#[18]">NVIC_IRQ15_Handler</a> from startup_tle989x.o(.text) referenced from startup_tle989x.o(RESET)
 <LI><a href="#[19]">NVIC_IRQ16_Handler</a> from startup_tle989x.o(.text) referenced from startup_tle989x.o(RESET)
 <LI><a href="#[1a]">NVIC_IRQ17_Handler</a> from startup_tle989x.o(.text) referenced from startup_tle989x.o(RESET)
 <LI><a href="#[1b]">NVIC_IRQ18_Handler</a> from isr_nvic_irq18_handler.o(.text.NVIC_IRQ18_Handler) referenced from startup_tle989x.o(RESET)
 <LI><a href="#[1c]">NVIC_IRQ19_Handler</a> from startup_tle989x.o(.text) referenced from startup_tle989x.o(RESET)
 <LI><a href="#[b]">NVIC_IRQ1_Handler</a> from startup_tle989x.o(.text) referenced from startup_tle989x.o(RESET)
 <LI><a href="#[1d]">NVIC_IRQ20_Handler</a> from isr_nvic_irq20_handler.o(.text.NVIC_IRQ20_Handler) referenced from startup_tle989x.o(RESET)
 <LI><a href="#[1e]">NVIC_IRQ21_Handler</a> from startup_tle989x.o(.text) referenced from startup_tle989x.o(RESET)
 <LI><a href="#[1f]">NVIC_IRQ22_Handler</a> from isr_nvic_irq22_handler.o(.text.NVIC_IRQ22_Handler) referenced from startup_tle989x.o(RESET)
 <LI><a href="#[20]">NVIC_IRQ23_Handler</a> from startup_tle989x.o(.text) referenced from startup_tle989x.o(RESET)
 <LI><a href="#[21]">NVIC_IRQ24_Handler</a> from isr_nvic_irq24_handler.o(.text.NVIC_IRQ24_Handler) referenced from startup_tle989x.o(RESET)
 <LI><a href="#[22]">NVIC_IRQ25_Handler</a> from startup_tle989x.o(.text) referenced from startup_tle989x.o(RESET)
 <LI><a href="#[23]">NVIC_IRQ26_Handler</a> from multican_handler.o(.text.NVIC_IRQ26_Handler) referenced from startup_tle989x.o(RESET)
 <LI><a href="#[24]">NVIC_IRQ27_Handler</a> from multican_handler.o(.text.NVIC_IRQ27_Handler) referenced from startup_tle989x.o(RESET)
 <LI><a href="#[25]">NVIC_IRQ28_Handler</a> from multican_handler.o(.text.NVIC_IRQ28_Handler) referenced from startup_tle989x.o(RESET)
 <LI><a href="#[26]">NVIC_IRQ29_Handler</a> from isr_nvic_irq29_handler.o(.text.NVIC_IRQ29_Handler) referenced from startup_tle989x.o(RESET)
 <LI><a href="#[c]">NVIC_IRQ2_Handler</a> from isr_nvic_irq2_handler.o(.text.NVIC_IRQ2_Handler) referenced from startup_tle989x.o(RESET)
 <LI><a href="#[27]">NVIC_IRQ30_Handler</a> from startup_tle989x.o(.text) referenced from startup_tle989x.o(RESET)
 <LI><a href="#[28]">NVIC_IRQ31_Handler</a> from startup_tle989x.o(.text) referenced from startup_tle989x.o(RESET)
 <LI><a href="#[d]">NVIC_IRQ3_Handler</a> from startup_tle989x.o(.text) referenced from startup_tle989x.o(RESET)
 <LI><a href="#[e]">NVIC_IRQ4_Handler</a> from startup_tle989x.o(.text) referenced from startup_tle989x.o(RESET)
 <LI><a href="#[f]">NVIC_IRQ5_Handler</a> from startup_tle989x.o(.text) referenced from startup_tle989x.o(RESET)
 <LI><a href="#[10]">NVIC_IRQ7_Handler</a> from startup_tle989x.o(.text) referenced from startup_tle989x.o(RESET)
 <LI><a href="#[11]">NVIC_IRQ8_Handler</a> from startup_tle989x.o(.text) referenced from startup_tle989x.o(RESET)
 <LI><a href="#[12]">NVIC_IRQ9_Handler</a> from startup_tle989x.o(.text) referenced from startup_tle989x.o(RESET)
 <LI><a href="#[2f]">N_USData_confirm</a> from tp_config.o(.text.N_USData_confirm) referenced 2 times from tp_config.o(.text.init_for_all_links)
 <LI><a href="#[2e]">N_USData_indication</a> from tp_config.o(.text.N_USData_indication) referenced 2 times from tp_config.o(.text.init_for_all_links)
 <LI><a href="#[8]">PendSV_Handler</a> from isr_exceptions.o(.text.PendSV_Handler) referenced from startup_tle989x.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_tle989x.o(.text) referenced 2 times from startup_tle989x.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from startup_tle989x.o(.text) referenced from startup_tle989x.o(RESET)
 <LI><a href="#[2c]">SVC_Handler_main</a> from startup_tle989x.o(.text) referenced from startup_tle989x.o(.text)
 <LI><a href="#[9]">SysTick_Handler</a> from isr_exceptions.o(.text.SysTick_Handler) referenced from startup_tle989x.o(RESET)
 <LI><a href="#[2a]">SystemInit</a> from system_tle989x.o(.text.SystemInit) referenced from startup_tle989x.o(.text)
 <LI><a href="#[5]">UsageFault_Handler</a> from isr_exceptions.o(.text.UsageFault_Handler) referenced from startup_tle989x.o(RESET)
 <LI><a href="#[2b]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_tle989x.o(.text)
 <LI><a href="#[29]">main</a> from main.o(.text.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[30]">print_debug_info</a> from tp_config.o(.text.print_debug_info) referenced 2 times from tp_config.o(.text.init_for_all_links)
 <LI><a href="#[31]">rx_event_L_Data_Confirm_handle</a> from can_iso_tp.o(.text.rx_event_L_Data_Confirm_handle) referenced 2 times from can_iso_tp.o(.text.iso_can_tp_L_Data_confirm)
 <LI><a href="#[34]">rx_event_L_Data_indication_handle</a> from can_iso_tp.o(.text.rx_event_L_Data_indication_handle) referenced 2 times from can_iso_tp.o(.text.iso_can_tp_L_Data_indication)
 <LI><a href="#[36]">rx_event_poll_handle</a> from can_iso_tp.o(.text.rx_event_poll_handle) referenced 2 times from can_iso_tp.o(.text.iso_can_tp_poll)
 <LI><a href="#[32]">tx_event_L_Data_Confirm_handle</a> from can_iso_tp.o(.text.tx_event_L_Data_Confirm_handle) referenced 2 times from can_iso_tp.o(.text.iso_can_tp_L_Data_confirm)
 <LI><a href="#[33]">tx_event_L_Data_indication_handle</a> from can_iso_tp.o(.text.tx_event_L_Data_indication_handle) referenced 2 times from can_iso_tp.o(.text.iso_can_tp_L_Data_indication)
 <LI><a href="#[35]">tx_event_N_USData_Request_handle</a> from can_iso_tp.o(.text.tx_event_N_USData_Request_handle) referenced 2 times from can_iso_tp.o(.text.iso_can_tp_N_USData_request)
 <LI><a href="#[37]">tx_event_poll_handle</a> from can_iso_tp.o(.text.tx_event_poll_handle) referenced 2 times from can_iso_tp.o(.text.iso_can_tp_poll)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[2b]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_tle989x.o(.text)
</UL>
<P><STRONG><a name="[80]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[38]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[3d]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[81]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[82]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[83]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[84]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[85]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, startup_tle989x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_tle989x.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>SVC_Handler_main</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tle989x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler_main
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler_main
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tle989x.o(.text)
</UL>
<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tle989x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tle989x.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>NVIC_IRQ10_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_tle989x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_IRQ10_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_IRQ10_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tle989x.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>NVIC_IRQ11_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_tle989x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_tle989x.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>NVIC_IRQ13_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_tle989x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_tle989x.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>NVIC_IRQ14_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_tle989x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_tle989x.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>NVIC_IRQ15_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_tle989x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_tle989x.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>NVIC_IRQ16_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_tle989x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_tle989x.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>NVIC_IRQ17_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_tle989x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_tle989x.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>NVIC_IRQ19_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_tle989x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_tle989x.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>NVIC_IRQ1_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_tle989x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_tle989x.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>NVIC_IRQ21_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_tle989x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_tle989x.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>NVIC_IRQ23_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_tle989x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_tle989x.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>NVIC_IRQ25_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_tle989x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_tle989x.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>NVIC_IRQ30_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_tle989x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_tle989x.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>NVIC_IRQ31_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_tle989x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_tle989x.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>NVIC_IRQ3_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_tle989x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_tle989x.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>NVIC_IRQ4_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_tle989x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_tle989x.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>NVIC_IRQ5_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_tle989x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_tle989x.o(RESET)
</UL>
<P><STRONG><a name="[86]"></a>NVIC_IRQ6_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_tle989x.o(.text), UNUSED)

<P><STRONG><a name="[10]"></a>NVIC_IRQ7_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_tle989x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_tle989x.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>NVIC_IRQ8_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_tle989x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_tle989x.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>NVIC_IRQ9_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_tle989x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_tle989x.o(RESET)
</UL>
<P><STRONG><a name="[7e]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_event_N_USData_Request_handle
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rx_event_L_Data_indication_handle
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_event_cf_frame
</UL>

<P><STRONG><a name="[41]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L_Data_request
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iso_can_tp_L_Data_indication
</UL>

<P><STRONG><a name="[87]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[3b]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rx_event_L_Data_indication_handle
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_event_cf_frame
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[88]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[89]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[3a]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[40]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L_Data_request
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UdsServerRequestProcess
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iso_can_tp_create
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_for_all_links
</UL>

<P><STRONG><a name="[8a]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[3c]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[71]"></a>memcmp</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, memcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iso_can_tp_L_Data_confirm
</UL>

<P><STRONG><a name="[39]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[8b]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[4e]"></a>ADC1_init</STRONG> (Thumb, 348 bytes, Stack size 0 bytes, adc1.o(.text.ADC1_init))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TLE_init
</UL>

<P><STRONG><a name="[4f]"></a>ADC2_init</STRONG> (Thumb, 140 bytes, Stack size 0 bytes, adc2.o(.text.ADC2_init))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TLE_init
</UL>

<P><STRONG><a name="[51]"></a>BDRV_init</STRONG> (Thumb, 468 bytes, Stack size 16 bytes, bdrv.o(.text.BDRV_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = BDRV_init
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TLE_init
</UL>

<P><STRONG><a name="[50]"></a>BDRV_initCP</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, bdrv.o(.text.BDRV_initCP))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TLE_init
</UL>

<P><STRONG><a name="[6b]"></a>BootJumpASM</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, jumptoapp.o(.text.BootJumpASM))
<BR><BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_jump
</UL>

<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr_exceptions.o(.text.BusFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_tle989x.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>CANTRX_init</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, cantrx.o(.text.CANTRX_init))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TLE_init
</UL>

<P><STRONG><a name="[42]"></a>CAN_TransmitReqMsgObj3_data</STRONG> (Thumb, 174 bytes, Stack size 8 bytes, multican_handler.o(.text.CAN_TransmitReqMsgObj3_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CAN_TransmitReqMsgObj3_data
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L_Data_request
</UL>

<P><STRONG><a name="[52]"></a>CCU7_init</STRONG> (Thumb, 312 bytes, Stack size 0 bytes, ccu7.o(.text.CCU7_init))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TLE_init
</UL>

<P><STRONG><a name="[3e]"></a>CSACSC_init</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, csacsc.o(.text.CSACSC_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CSACSC_init
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PMU_serviceFailSafeWatchdog
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TLE_init
</UL>

<P><STRONG><a name="[66]"></a>Creating_Seed</STRONG> (Thumb, 90 bytes, Stack size 0 bytes, uds27_sa.o(.text.Creating_Seed))
<BR><BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UdsServerRequestProcess
</UL>

<P><STRONG><a name="[54]"></a>DMA_init</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dma.o(.text.DMA_init))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TLE_init
</UL>

<P><STRONG><a name="[55]"></a>GPIO_init</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, gpio.o(.text.GPIO_init))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TLE_init
</UL>

<P><STRONG><a name="[56]"></a>GPT12_init</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gpt12.o(.text.GPT12_init))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TLE_init
</UL>

<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr_exceptions.o(.text.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_tle989x.o(RESET)
</UL>
<P><STRONG><a name="[5f]"></a>INT_init</STRONG> (Thumb, 458 bytes, Stack size 20 bytes, int.o(.text.INT_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = INT_init
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TLE_init
</UL>

<P><STRONG><a name="[57]"></a>MON_init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, mon.o(.text.MON_init))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TLE_init
</UL>

<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr_exceptions.o(.text.MemManage_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_tle989x.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>MultiCAN_init</STRONG> (Thumb, 1522 bytes, Stack size 16 bytes, multican_handler.o(.text.MultiCAN_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = MultiCAN_init
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_IRQ28_Handler
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr_exceptions.o(.text.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_tle989x.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>NVIC_IRQ0_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr_nvic_irq0_handler.o(.text.NVIC_IRQ0_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_tle989x.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>NVIC_IRQ12_Handler</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, isr_nvic_irq12_handler.o(.text.NVIC_IRQ12_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_tle989x.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>NVIC_IRQ18_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr_nvic_irq18_handler.o(.text.NVIC_IRQ18_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_tle989x.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>NVIC_IRQ20_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr_nvic_irq20_handler.o(.text.NVIC_IRQ20_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_tle989x.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>NVIC_IRQ22_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr_nvic_irq22_handler.o(.text.NVIC_IRQ22_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_tle989x.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>NVIC_IRQ24_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr_nvic_irq24_handler.o(.text.NVIC_IRQ24_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_tle989x.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>NVIC_IRQ26_Handler</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, multican_handler.o(.text.NVIC_IRQ26_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_tle989x.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>NVIC_IRQ27_Handler</STRONG> (Thumb, 506 bytes, Stack size 16 bytes, multican_handler.o(.text.NVIC_IRQ27_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = NVIC_IRQ27_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tle989x.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>NVIC_IRQ28_Handler</STRONG> (Thumb, 204 bytes, Stack size 16 bytes, multican_handler.o(.text.NVIC_IRQ28_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = NVIC_IRQ28_Handler &rArr; MultiCAN_init
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_delay_us
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MultiCAN_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tle989x.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>NVIC_IRQ29_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr_nvic_irq29_handler.o(.text.NVIC_IRQ29_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_tle989x.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>NVIC_IRQ2_Handler</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, isr_nvic_irq2_handler.o(.text.NVIC_IRQ2_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_IRQ2_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T16_ISR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tle989x.o(RESET)
</UL>
<P><STRONG><a name="[7c]"></a>PMU_clrFailSafeWatchdogFailSts</STRONG> (Thumb, 142 bytes, Stack size 20 bytes, pmu.o(.text.PMU_clrFailSafeWatchdogFailSts))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = PMU_clrFailSafeWatchdogFailSts
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[49]"></a>PMU_countFailSafeWatchdog</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, pmu.o(.text.PMU_countFailSafeWatchdog))
<BR><BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[4d]"></a>PMU_init</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, pmu.o(.text.PMU_init))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TLE_init
</UL>

<P><STRONG><a name="[7b]"></a>PMU_initFailSafeWatchdog</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, pmu.o(.text.PMU_initFailSafeWatchdog))
<BR><BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3f]"></a>PMU_serviceFailSafeWatchdog</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, pmu.o(.text.PMU_serviceFailSafeWatchdog))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSACSC_init
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6a]"></a>PMU_serviceFailSafeWatchdogSOW</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, pmu.o(.text.PMU_serviceFailSafeWatchdogSOW))
<BR><BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_jump
</UL>

<P><STRONG><a name="[67]"></a>PasswordGenerator</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, uds27_sa.o(.text.PasswordGenerator))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PasswordGenerator
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UdsServerRequestProcess
</UL>

<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr_exceptions.o(.text.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_tle989x.o(RESET)
</UL>
<P><STRONG><a name="[74]"></a>QueueIn</STRONG> (Thumb, 88 bytes, Stack size 12 bytes, fifoqueue.o(.text.QueueIn))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = QueueIn
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;report_event_to_manage_block
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iso_can_tp_poll
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iso_can_tp_N_USData_request
</UL>

<P><STRONG><a name="[6e]"></a>QueueInit</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, fifoqueue.o(.text.QueueInit))
<BR><BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_manage_block_init
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iso_can_tp_create
</UL>

<P><STRONG><a name="[76]"></a>QueueOut</STRONG> (Thumb, 84 bytes, Stack size 12 bytes, fifoqueue.o(.text.QueueOut))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = QueueOut
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;report_event_to_manage_block
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iso_can_tp_poll
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iso_can_tp_N_USData_request
</UL>

<P><STRONG><a name="[48]"></a>SCU_checkXTALDiagnosis</STRONG> (Thumb, 564 bytes, Stack size 20 bytes, scu.o(.text.SCU_checkXTALDiagnosis))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SCU_checkXTALDiagnosis
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_initClk
</UL>

<P><STRONG><a name="[43]"></a>SCU_delay_us</STRONG> (Thumb, 150 bytes, Stack size 0 bytes, scu.o(.text.SCU_delay_us))
<BR><BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_IRQ28_Handler
</UL>

<P><STRONG><a name="[4c]"></a>SCU_init</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, scu.o(.text.SCU_init))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TLE_init
</UL>

<P><STRONG><a name="[47]"></a>SCU_initClk</STRONG> (Thumb, 400 bytes, Stack size 24 bytes, scu.o(.text.SCU_initClk))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = SCU_initClk &rArr; SCU_checkXTALDiagnosis
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_checkXTALDiagnosis
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[4a]"></a>SCU_initSysTick</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, scu.o(.text.SCU_initSysTick))
<BR><BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[58]"></a>SDADC_init</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, sdadc.o(.text.SDADC_init))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TLE_init
</UL>

<P><STRONG><a name="[59]"></a>SSC0_init</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ssc.o(.text.SSC0_init))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TLE_init
</UL>

<P><STRONG><a name="[5a]"></a>SSC1_init</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ssc.o(.text.SSC1_init))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TLE_init
</UL>

<P><STRONG><a name="[68]"></a>SecurityAccess_unlock</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, uds27_sa.o(.text.SecurityAccess_unlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SecurityAccess_unlock
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UdsServerRequestProcess
</UL>

<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, isr_exceptions.o(.text.SysTick_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PMU_countFailSafeWatchdog
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tle989x.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>SystemInit</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, system_tle989x.o(.text.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = SystemInit &rArr; SCU_initClk &rArr; SCU_checkXTALDiagnosis
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_initSysTick
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_initClk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tle989x.o(.text)
</UL>
<P><STRONG><a name="[45]"></a>T16_ISR</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, multican_handler.o(.text.T16_ISR))
<BR><BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_IRQ2_Handler
</UL>

<P><STRONG><a name="[5b]"></a>T20_init</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, timer2x.o(.text.T20_init))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TLE_init
</UL>

<P><STRONG><a name="[5c]"></a>T21_init</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, timer2x.o(.text.T21_init))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TLE_init
</UL>

<P><STRONG><a name="[4b]"></a>TLE_init</STRONG> (Thumb, 188 bytes, Stack size 8 bytes, tle_device.o(.text.TLE_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = TLE_init &rArr; INT_init
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSC1_init
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSC0_init
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDADC_init
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_init
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PMU_init
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MON_init
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INT_init
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPT12_init
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_init
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_init
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSACSC_init
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCU7_init
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANTRX_init
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BDRV_init
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BDRV_initCP
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC2_init
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_init
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_init
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_init
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T21_init
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T20_init
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5d]"></a>UART0_init</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, uart.o(.text.UART0_init))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TLE_init
</UL>

<P><STRONG><a name="[5e]"></a>UART1_init</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, uart.o(.text.UART1_init))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TLE_init
</UL>

<P><STRONG><a name="[7a]"></a>UDS_init</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, server.o(.text.UDS_init))
<BR><BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[62]"></a>UDS_server_poll</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, server.o(.text.UDS_server_poll))
<BR><BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SystemReset
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[46]"></a>UdsServerRequestProcess</STRONG> (Thumb, 2026 bytes, Stack size 168 bytes, server.o(.text.UdsServerRequestProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = UdsServerRequestProcess &rArr; udsServer_sendResponse &rArr; iso_can_tp_N_USData_request &rArr; QueueOut
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SecurityAccess_unlock
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PasswordGenerator
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Creating_Seed
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UDS_Serice_EcuReset
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udsServer_sendResponse
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iso_can_tp_N_USData_request
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc32
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;N_USData_indication
</UL>

<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr_exceptions.o(.text.UsageFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_tle989x.o(RESET)
</UL>
<P><STRONG><a name="[69]"></a>app_jump</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, jumptoapp.o(.text.app_jump))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = app_jump
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PMU_serviceFailSafeWatchdogSOW
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BootJumpASM
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[63]"></a>crc32</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, crclib.o(.text.crc32))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = crc32
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UdsServerRequestProcess
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6f]"></a>init_for_all_links</STRONG> (Thumb, 162 bytes, Stack size 24 bytes, tp_config.o(.text.init_for_all_links))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = init_for_all_links
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[70]"></a>iso_can_tp_L_Data_confirm</STRONG> (Thumb, 310 bytes, Stack size 24 bytes, can_iso_tp.o(.text.iso_can_tp_L_Data_confirm))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = iso_can_tp_L_Data_confirm &rArr; report_event_to_manage_block &rArr; QueueOut
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;report_event_to_manage_block
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[73]"></a>iso_can_tp_L_Data_indication</STRONG> (Thumb, 234 bytes, Stack size 24 bytes, can_iso_tp.o(.text.iso_can_tp_L_Data_indication))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = iso_can_tp_L_Data_indication &rArr; report_event_to_manage_block &rArr; QueueOut
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;report_event_to_manage_block
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[64]"></a>iso_can_tp_N_USData_request</STRONG> (Thumb, 208 bytes, Stack size 24 bytes, can_iso_tp.o(.text.iso_can_tp_N_USData_request))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = iso_can_tp_N_USData_request &rArr; QueueOut
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_lock_unlock
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueueOut
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_lock_try_lock
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueueIn
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UdsServerRequestProcess
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udsServer_sendResponse
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[78]"></a>iso_can_tp_create</STRONG> (Thumb, 420 bytes, Stack size 24 bytes, can_iso_tp.o(.text.iso_can_tp_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = iso_can_tp_create &rArr; event_manage_block_init
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueueInit
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_lock_init
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_manage_block_init
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[79]"></a>iso_can_tp_poll</STRONG> (Thumb, 306 bytes, Stack size 40 bytes, can_iso_tp.o(.text.iso_can_tp_poll))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = iso_can_tp_poll &rArr; QueueOut
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_lock_unlock
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueueOut
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_lock_try_lock
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueueIn
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[29]"></a>main</STRONG> (Thumb, 656 bytes, Stack size 8 bytes, main.o(.text.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = main &rArr; iso_can_tp_L_Data_confirm &rArr; report_event_to_manage_block &rArr; QueueOut
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iso_can_tp_poll
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PMU_serviceFailSafeWatchdog
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iso_can_tp_L_Data_confirm
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iso_can_tp_L_Data_indication
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UDS_server_poll
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iso_can_tp_N_USData_request
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iso_can_tp_create
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_for_all_links
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MultiCAN_init
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TLE_init
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PMU_clrFailSafeWatchdogFailSts
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PMU_initFailSafeWatchdog
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_jump
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc32
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UDS_init
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SystemReset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[6d]"></a>mcu_lock_init</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, mcu_lock.o(.text.mcu_lock_init))
<BR><BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_manage_block_init
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iso_can_tp_create
</UL>

<P><STRONG><a name="[75]"></a>mcu_lock_try_lock</STRONG> (Thumb, 46 bytes, Stack size 4 bytes, mcu_lock.o(.text.mcu_lock_try_lock))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = mcu_lock_try_lock
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;report_event_to_manage_block
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iso_can_tp_poll
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iso_can_tp_N_USData_request
</UL>

<P><STRONG><a name="[77]"></a>mcu_lock_unlock</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, mcu_lock.o(.text.mcu_lock_unlock))
<BR><BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;report_event_to_manage_block
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iso_can_tp_poll
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iso_can_tp_N_USData_request
</UL>

<P><STRONG><a name="[8c]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[8d]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[8e]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[7d]"></a>__NVIC_SystemReset</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, main.o(.text.__NVIC_SystemReset))
<BR><BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6c]"></a>event_manage_block_init</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, can_iso_tp.o(.text.event_manage_block_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = event_manage_block_init
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueueInit
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_lock_init
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iso_can_tp_create
</UL>

<P><STRONG><a name="[36]"></a>rx_event_poll_handle</STRONG> (Thumb, 152 bytes, Stack size 16 bytes, can_iso_tp.o(.text.rx_event_poll_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = rx_event_poll_handle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> can_iso_tp.o(.text.iso_can_tp_poll)
</UL>
<P><STRONG><a name="[37]"></a>tx_event_poll_handle</STRONG> (Thumb, 146 bytes, Stack size 16 bytes, can_iso_tp.o(.text.tx_event_poll_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = tx_event_poll_handle &rArr; tx_event_cf_frame
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_event_cf_frame
</UL>
<BR>[Address Reference Count : 1]<UL><LI> can_iso_tp.o(.text.iso_can_tp_poll)
</UL>
<P><STRONG><a name="[72]"></a>report_event_to_manage_block</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, can_iso_tp.o(.text.report_event_to_manage_block))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = report_event_to_manage_block &rArr; QueueOut
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_lock_unlock
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueueOut
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_lock_try_lock
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueueIn
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iso_can_tp_L_Data_confirm
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iso_can_tp_L_Data_indication
</UL>

<P><STRONG><a name="[7f]"></a>tx_event_cf_frame</STRONG> (Thumb, 276 bytes, Stack size 32 bytes, can_iso_tp.o(.text.tx_event_cf_frame))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = tx_event_cf_frame
</UL>
<BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_event_L_Data_indication_handle
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_event_L_Data_Confirm_handle
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_event_poll_handle
</UL>

<P><STRONG><a name="[31]"></a>rx_event_L_Data_Confirm_handle</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, can_iso_tp.o(.text.rx_event_L_Data_Confirm_handle))
<BR>[Address Reference Count : 1]<UL><LI> can_iso_tp.o(.text.iso_can_tp_L_Data_confirm)
</UL>
<P><STRONG><a name="[32]"></a>tx_event_L_Data_Confirm_handle</STRONG> (Thumb, 170 bytes, Stack size 8 bytes, can_iso_tp.o(.text.tx_event_L_Data_Confirm_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = tx_event_L_Data_Confirm_handle &rArr; tx_event_cf_frame
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_event_cf_frame
</UL>
<BR>[Address Reference Count : 1]<UL><LI> can_iso_tp.o(.text.iso_can_tp_L_Data_confirm)
</UL>
<P><STRONG><a name="[33]"></a>tx_event_L_Data_indication_handle</STRONG> (Thumb, 186 bytes, Stack size 16 bytes, can_iso_tp.o(.text.tx_event_L_Data_indication_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = tx_event_L_Data_indication_handle &rArr; tx_event_cf_frame
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_event_cf_frame
</UL>
<BR>[Address Reference Count : 1]<UL><LI> can_iso_tp.o(.text.iso_can_tp_L_Data_indication)
</UL>
<P><STRONG><a name="[34]"></a>rx_event_L_Data_indication_handle</STRONG> (Thumb, 660 bytes, Stack size 24 bytes, can_iso_tp.o(.text.rx_event_L_Data_indication_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = rx_event_L_Data_indication_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> can_iso_tp.o(.text.iso_can_tp_L_Data_indication)
</UL>
<P><STRONG><a name="[35]"></a>tx_event_N_USData_Request_handle</STRONG> (Thumb, 434 bytes, Stack size 32 bytes, can_iso_tp.o(.text.tx_event_N_USData_Request_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = tx_event_N_USData_Request_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> can_iso_tp.o(.text.iso_can_tp_N_USData_request)
</UL>
<P><STRONG><a name="[65]"></a>udsServer_sendResponse</STRONG> (Thumb, 104 bytes, Stack size 8 bytes, server.o(.text.udsServer_sendResponse))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = udsServer_sendResponse &rArr; iso_can_tp_N_USData_request &rArr; QueueOut
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iso_can_tp_N_USData_request
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UdsServerRequestProcess
</UL>

<P><STRONG><a name="[60]"></a>UDS_Serice_EcuReset</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, server.o(.text.UDS_Serice_EcuReset))
<BR><BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SystemReset
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UdsServerRequestProcess
</UL>

<P><STRONG><a name="[61]"></a>__NVIC_SystemReset</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, server.o(.text.__NVIC_SystemReset))
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UDS_Serice_EcuReset
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UDS_server_poll
</UL>

<P><STRONG><a name="[2d]"></a>L_Data_request</STRONG> (Thumb, 88 bytes, Stack size 80 bytes, tp_config.o(.text.L_Data_request))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = L_Data_request &rArr; CAN_TransmitReqMsgObj3_data
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_TransmitReqMsgObj3_data
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tp_config.o(.text.init_for_all_links)
</UL>
<P><STRONG><a name="[2e]"></a>N_USData_indication</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, tp_config.o(.text.N_USData_indication))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = N_USData_indication &rArr; UdsServerRequestProcess &rArr; udsServer_sendResponse &rArr; iso_can_tp_N_USData_request &rArr; QueueOut
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UdsServerRequestProcess
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tp_config.o(.text.init_for_all_links)
</UL>
<P><STRONG><a name="[2f]"></a>N_USData_confirm</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, tp_config.o(.text.N_USData_confirm))
<BR>[Address Reference Count : 1]<UL><LI> tp_config.o(.text.init_for_all_links)
</UL>
<P><STRONG><a name="[30]"></a>print_debug_info</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, tp_config.o(.text.print_debug_info))
<BR>[Address Reference Count : 1]<UL><LI> tp_config.o(.text.init_for_all_links)
</UL>
<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, startup_tle989x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_tle989x.o(RESET)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
