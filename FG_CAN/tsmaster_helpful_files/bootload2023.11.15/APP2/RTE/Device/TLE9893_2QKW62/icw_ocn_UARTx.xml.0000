<?xml version="1.0" encoding="UTF-8" ?>
<!--file icw_ocn_UARTx.xml                                                          -->
<!--brief Embedded Power Modules configuration                                      -->
<!--                                                                                -->
<!--Copyright (c) 2017, Infineon Technologies AG                                    -->
<!--All rights reserved.                                                            -->
<!--                                                                                -->
<!--Redistribution and use in source and binary forms, with or without modification,-->
<!--are permitted provided that the following conditions are met:                   -->
<!--                                                                                -->
<!--  Redistributions of source code must retain the above copyright notice, this   -->
<!--  list of conditions and the following disclaimer.                              -->
<!--                                                                                -->
<!--  Redistributions in binary form must reproduce the above copyright notice,     -->
<!--  this list of conditions and the following disclaimer in the documentation     -->
<!--  and/or other materials provided with the distribution.                        -->
<!--                                                                                -->
<!--  Neither the name of the copyright holders nor the names of its contributors   -->
<!--  may be used to endorse or promote products derived from this software without -->
<!--  specific prior written permission.                                            -->
<!--                                                                                -->
<!--THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND -->
<!--ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED   -->
<!--WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE          -->
<!--DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE    -->
<!--FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL      -->
<!--DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR      -->
<!--SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER      -->
<!--CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,   -->
<!--OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE   -->
<!--OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.            -->
<!--                                                                                -->
<!--********************************************************************************-->
<!--        Infineon Embedded Power Family TLE989x Module Configuration File        -->
<!--********************************************************************************-->
<!--                                                                                -->
<!--********************************************************************************-->
<!--                               Author(s) Identity                               -->
<!--********************************************************************************-->
<!--   Initials     Name                                                            -->
<!--   DM           Daniel Mysliwitz                                                -->
<!--   JO           Julia Ott                                                       -->
<!--   BG           Blandine Guillot                                                -->
<!--********************************************************************************-->
<!--                                                                                -->
<!--********************************************************************************-->
<!--                            Revision Control History                            -->
<!--********************************************************************************-->
<!-- V0.0.1: 2020-09-11, BG:   Initial version                                      -->
<!-- V0.0.2: 2020-10-21, BG:   EP-541: Updated formulas according to new item for   -->
<!--                           the pin selection                                    -->
<!--********************************************************************************-->
<ifxmlcfg version="2.3.1">
  <checksum>703ca63fa1e1451edcdb0eeee8e28deb5c284ecd0083fdd4b531a3b219a79a78</checksum>
  <version label="V0.0.2"/>
  <svd file="tle989x.svd"/>
  <verticalcontainer label="UART">
    <header file="uart_defines.h">

      <timer visible="false" define="UART_INIT" svd="0" interval="1" singleShot="1" run="0" header="">
        <action event="changed" cmd="setDef" data="UART0_UPDATE_MODE.run=1;UART1_UPDATE_MODE.run=1;UART0_UPDATE_GRAPH.run=1;UART1_UPDATE_GRAPH.run=1"/>
        <action event="changed" cmd="setDef" data="UART0_MODESEL.enabled=0;UART1_MODESEL.enabled=0"/>
      </timer>

      <tabcontainer define="CONT_UARTX">

        <verticalcontainer label="UART0">

          <!-- UART0 ENABLE -->
          <checkbox label="Enable UART0" define="UART0.GLOBCONF_EN" svd="0" font="Source Sans Pro,15,0,0,100,1,0,0,0,0" color="255;128;64">
            <action event="checked" cmd="setDef" data="UART0_MODESEL.enabled=1"/>
            <action event="unchecked" cmd="setDef" data="UART0_MODESEL.enabled=0"/>
          </checkbox>

          <!-- UART0 MODE SELECTION -->
          <horizontalcontainer label="UART0" define="UART0_MODESEL" svd="0">
            <verticalcontainer>
              <horizontalcontainer size="830;50">
                <text label="Mode Selection"/>
                <combo label="Mode Selection" define="UART0_MODE" svd="0" setDef="UART0_UPDATE_MODE.run=1" header="temp_defines.h">
                  <item label="Not Selected">
                    <action event="selected" cmd="setDef" data="UART0_TOP.enabled=0;UART0_GRAPH.enabled=0"/>
                  </item>
                  <item label="Mode 1: 8-bit UART, variable baudrate">
                    <action event="selected" cmd="setDef" data="UART0_TOP.enabled=1;UART0_GRAPH.enabled=1"/>
                  </item>
                  <item label="Mode 2: 9-bit UART, fixed baudrate">
                    <action event="selected" cmd="setDef" data="UART0_TOP.enabled=1;UART0_GRAPH.enabled=1"/>
                  </item>
                  <item label="Mode 3: 9-bit UART, variable baudrate">
                    <action event="selected" cmd="setDef" data="UART0_TOP.enabled=1;UART0_GRAPH.enabled=1"/>
                  </item>
                </combo>
              </horizontalcontainer>

              <!-- UART0 CONFIGURATION -->
              <groupcontainer label="UART0 Configuration" define="UART0_TOP" enabled="false" size="830;1050">
                <verticalcontainer>

                  <include IDX="UART0" IDX_LIN="LIN0">template_uart_mode.xml</include>
                  <include IDX="UART0">template_uart_timer.xml</include>

                  <!-- INSEL register -->
                  <math visible="false" define="UART0.INSEL.RXDSEL" formula="((UART0_MODE!=0).*(UART0_UART0.INSEL_RXDSEL!=255))?(UART0_UART0.INSEL_RXDSEL:0)"/>
                  <math visible="false" define="UART0.INSEL.TXEVSEL" formula="((UART0_MODE!=0).*(UART0.SCON_TXENSEL==2).*(UART0_UART0.INSEL_TXEVSEL!=255))?(UART0_UART0.INSEL_TXEVSEL:0)"/>

                  <!-- SCON register -->
                  <math visible="false" define="UART0.SCON.SM0" formula="((UART0_MODE==0).+(UART0_MODE==1))?(0:1)"/>
                  <math visible="false" define="UART0.SCON.SM1" formula="((UART0_MODE==1).+(UART0_MODE==3))?(1:0)"/>
                  <math visible="false" define="UART0.SCON.SM2" formula=""/>
                  <math visible="false" define="UART0.SCON.REN" formula="(UART0_MODE!=0)?(UART0.SCON_REN:0)"/>
                  <math visible="false" define="UART0.SCON.RMOD" formula="(UART0_MODE!=0)?(UART0.SCON_RMOD:0)"/>
                  <math visible="false" define="UART0.SCON.TXINV" formula="(UART0_MODE!=0)?(UART0.SCON_TXINV:0)"/>
                  <math visible="false" define="UART0.SCON.TXENSEL" formula="(UART0_MODE!=0)?(UART0.SCON_TXENSEL:0)"/>

                  <!-- IEN register -->
                  <math visible="false" define="UART0.TI_INT_EN" svd="0" formula="UART0_TIINTEN" header="isr_defines.h"/>
                  <math visible="false" define="UART0.IEN.TIEN" formula="(UART0_MODE!=0)?(UART0.IEN_TIEN:0)" header="isr_defines.h"/>

                  <math visible="false" define="UART0.RI_INT_EN" svd="0" formula="UART0_RIINTEN" header="isr_defines.h"/>
                  <math visible="false" define="UART0.IEN.RIEN" formula="(UART0_MODE!=0)?(UART0.IEN_RIEN:0)" header="isr_defines.h"/>

                  <math visible="false" define="UART0.SYNCERR_INT_EN" svd="0" formula="UART0_SYNCERRINTEN" header="isr_defines.h"/>
                  <math visible="false" define="UART0.IEN.ERRSYNEN" formula="(UART0_MODE!=0)?(UART0.IEN_ERRSYNEN:0)" header="isr_defines.h"/>

                  <math visible="false" define="UART0.EOS_INT_EN" svd="0" formula="UART0_EOSINTEN" header="isr_defines.h"/>
                  <math visible="false" define="UART0.IEN.EOFSYNEN" formula="(UART0_MODE!=0)?(UART0.IEN_EOFSYNEN:0)" header="isr_defines.h"/>

                  <!-- BCON register -->
                  <math visible="false" define="UART0.BCON.BR_R" formula="((UART0_MODE==1).+(UART0_MODE==3))?(1:0)"/>
                  <math visible="false" define="UART0.BCON.BR_PRE" formula="((UART0_MODE==1).+(UART0_MODE==3))?(UART0.BCON_BR_PRE:0)"/>
                  <math visible="false" define="UART0.BCON.BG_FD_SEL" formula="((UART0_MODE==1).+(UART0_MODE==3))?(UART0.BCON_BG_FD_SEL:0)"/>
                  <math visible="false" define="UART0.BCON.BG_BR_VALUE" formula="((UART0_MODE==1).+(UART0_MODE==3))?(UART0.BCON_BG_BR_VALUE:0)"/>

                  <!-- LINCON register -->
                  <math visible="false" define="UART0.LINCON.BREN" formula="(UART0_MODE!=0)?(UART0.LINCON_BREN:0)"/>

                </verticalcontainer>
              </groupcontainer>
            </verticalcontainer>

            <!-- UART0 GRAPH -->
            <include IDX="UART0">template_uart_graph.xml</include>
            <horizontalcontainer size="450;1100"/><!-- Ghost container -->

          </horizontalcontainer>
        </verticalcontainer>

        <verticalcontainer label="UART1">

          <!-- UART1 ENABLE -->
          <checkbox label="Enable UART1" define="UART1.GLOBCONF_EN" svd="0" font="Source Sans Pro,15,0,0,100,1,0,0,0,0" color="255;128;64">
            <action event="checked" cmd="setDef" data="UART1_MODESEL.enabled=1"/>
            <action event="unchecked" cmd="setDef" data="UART1_MODESEL.enabled=0"/>
          </checkbox>

          <!-- UART1 MODE SELECTION -->
          <horizontalcontainer label="UART1" define="UART1_MODESEL" svd="0">
            <verticalcontainer>
              <horizontalcontainer size="830;50">
                <text label="Mode Selection"/>
                <combo label="Mode Selection" define="UART1_MODE" svd="0" setDef="UART1_UPDATE_MODE.run=1" header="temp_defines.h">
                  <item label="Not Selected">
                    <action event="selected" cmd="setDef" data="UART1_TOP.enabled=0;UART1_GRAPH.enabled=0"/>
                  </item>
                  <item label="Mode 1: 8-bit UART, variable baudrate">
                    <action event="selected" cmd="setDef" data="UART1_TOP.enabled=1;UART1_GRAPH.enabled=1"/>
                  </item>
                  <item label="Mode 2: 9-bit UART, fixed baudrate">
                    <action event="selected" cmd="setDef" data="UART1_TOP.enabled=1;UART1_GRAPH.enabled=1"/>
                  </item>
                  <item label="Mode 3: 9-bit UART, variable baudrate">
                    <action event="selected" cmd="setDef" data="UART1_TOP.enabled=1;UART1_GRAPH.enabled=1"/>
                  </item>
                </combo>
              </horizontalcontainer>

              <!-- UART1 CONFIGURATION -->
              <groupcontainer label="UART1 Configuration" define="UART1_TOP" enabled="false" size="830;1050">
                <verticalcontainer>

                  <include IDX="UART1" IDX_LIN="LIN1">template_uart_mode.xml</include>
                  <include IDX="UART1">template_uart_timer.xml</include>

                  <!-- INSEL register -->
                  <math visible="false" define="UART1.INSEL.RXDSEL" formula="((UART1_MODE!=0).*(UART1_UART1.INSEL_RXDSEL!=255))?(UART1_UART1.INSEL_RXDSEL:0)"/>
                  <math visible="false" define="UART1.INSEL.TXEVSEL" formula="((UART1_MODE!=0).*(UART1.SCON_TXENSEL==2).*(UART1_UART1.INSEL_TXEVSEL!=255))?(UART1_UART1.INSEL_TXEVSEL:0)"/>

                  <!-- SCON register -->
                  <math visible="false" define="UART1.SCON.SM0" formula="((UART1_MODE==0).+(UART1_MODE==1))?(0:1)"/>
                  <math visible="false" define="UART1.SCON.SM1" formula="((UART1_MODE==1).+(UART1_MODE==3))?(1:0)"/>
                  <math visible="false" define="UART1.SCON.SM2" formula=""/>
                  <math visible="false" define="UART1.SCON.REN" formula="(UART1_MODE!=0)?(UART1.SCON_REN:0)"/>
                  <math visible="false" define="UART1.SCON.RMOD" formula="(UART1_MODE!=0)?(UART1.SCON_RMOD:0)"/>
                  <math visible="false" define="UART1.SCON.TXINV" formula="(UART1_MODE!=0)?(UART1.SCON_TXINV:0)"/>
                  <math visible="false" define="UART1.SCON.TXENSEL" formula="(UART1_MODE!=0)?(UART1.SCON_TXENSEL:0)"/>

                  <!-- IEN register -->
                  <math visible="false" define="UART1.TI_INT_EN" svd="0" formula="UART1_TIINTEN" header="isr_defines.h"/>
                  <math visible="false" define="UART1.IEN.TIEN" formula="(UART1_MODE!=0)?(UART1.IEN_TIEN:0)" header="isr_defines.h"/>

                  <math visible="false" define="UART1.RI_INT_EN" svd="0" formula="UART1_RIINTEN" header="isr_defines.h"/>
                  <math visible="false" define="UART1.IEN.RIEN" formula="(UART1_MODE!=0)?(UART1.IEN_RIEN:0)" header="isr_defines.h"/>

                  <math visible="false" define="UART1.SYNCERR_INT_EN" svd="0" formula="UART1_SYNCERRINTEN" header="isr_defines.h"/>
                  <math visible="false" define="UART1.IEN.ERRSYNEN" formula="(UART1_MODE!=0)?(UART1.IEN_ERRSYNEN:0)" header="isr_defines.h"/>

                  <math visible="false" define="UART1.EOS_INT_EN" svd="0" formula="UART1_EOSINTEN" header="isr_defines.h"/>
                  <math visible="false" define="UART1.IEN.EOFSYNEN" formula="(UART1_MODE!=0)?(UART1.IEN_EOFSYNEN:0)" header="isr_defines.h"/>

                  <!-- BCON register -->
                  <math visible="false" define="UART1.BCON.BR_R" formula="((UART1_MODE==1).+(UART1_MODE==3))?(1:0)"/>
                  <math visible="false" define="UART1.BCON.BR_PRE" formula="((UART1_MODE==1).+(UART1_MODE==3))?(UART1.BCON_BR_PRE:0)"/>
                  <math visible="false" define="UART1.BCON.BG_FD_SEL" formula="((UART1_MODE==1).+(UART1_MODE==3))?(UART1.BCON_BG_FD_SEL:0)"/>
                  <math visible="false" define="UART1.BCON.BG_BR_VALUE" formula="((UART1_MODE==1).+(UART1_MODE==3))?(UART1.BCON_BG_BR_VALUE:0)"/>

                  <!-- LINCON register -->
                  <math visible="false" define="UART1.LINCON.BREN" formula="(UART1_MODE!=0)?(UART1.LINCON_BREN:0)"/>

                </verticalcontainer>
              </groupcontainer>
            </verticalcontainer>

            <!-- UART1 GRAPH -->
            <include IDX="UART1">template_uart_graph.xml</include>
            <horizontalcontainer size="450;1100"/><!-- Ghost container -->

          </horizontalcontainer>
        </verticalcontainer>
      </tabcontainer>
    </header>
  </verticalcontainer>
</ifxmlcfg>
